module Audio_Mixer(clk,Channel1_In,Channel2_In,Channel3_In,Channel1_Out,Channel2_Out,volume1,volume2,volume3,volume_master,pan);

input [23:0] Channel1_In,Channel2_In,Channel3_In;
input [24:0] volume1,volume2,volume3,volume_master;
input [15:0] pan;
input clk;

output [23:0] Channel1_Out,Channel2_Out;

reg [23:0] Channel1_Out,Channel2_Out;


function [23:0] devide_2();
	input [23:0] myinput;
	begin
		if(myinput[23]==0)
			begin
				devide_2[23]=myinput[23];
				devide_2[22:0]=myinput[22:0]/2;
			end
		else
			begin
				devide_2[23]=myinput[23];
				devide_2[22:0]=~myinput[22:0];
				devide_2[22:0]=devide_2[22:0]/2;
				devide_2[22:0]=~devide_2[22:0];
			end
		
	end
endfunction

function [23:0] mix();
input [23:0] inputa;
input [23:0] inputb;
	begin
		 
		 if(inputa[23]==0)		   		   
			begin
				if(inputb[23]==0)
					begin
						mix=inputa[22:0]+inputb[22:0];
						if(mix[23]==1)
						 begin
						   mix[23]=0;
						   mix[22:0]=23'h7fffff;						   
						 end												 														
					end
				else
					begin
						if(inputa[22:0]>=(~inputb[22:0]))
							begin								
								mix[22:0]=(inputa[22:0]-(~inputb[22:0]));																								
								mix[23]=0;
							end		
						else
							begin
								mix[22:0]=((~inputb[22:0])-inputa[22:0]);							
								mix[22:0]=~mix[22:0];
								mix[23]=1;								
							end
					end
			end
		else  // inputa[19]==1
			begin
				if(inputb[23]==0)
					begin
						if((~inputa[22:0])>=inputb[22:0])
							begin
								mix[22:0]=((~inputa[22:0])-inputb[22:0]);
								mix[22:0]=~mix[22:0];
								mix[23]=1;
							end		
						else
							begin
								mix[22:0]=(inputb[22:0]-(~inputa[22:0]));								
								mix[23]=0;								
							end						
					end
				else
					begin
						mix=(~inputa[22:0])+(~inputb[22:0]);
						if(mix[23]==1)
						 begin
							mix[22:0]=23'h7fffff;
							mix[23]=0;
					     end						
						mix[22:0]=~mix[22:0];
						mix[23]=1;												
					end
			end
	end
endfunction


reg [23:0] buff_channel1;
reg [42:0] temp1;
always @(negedge clk)
begin

	temp1=0;
	if(Channel1_In[23]==1'b1)
		temp1[22:0]=(~Channel1_In[22:0]+1);
	else
		temp1[22:0]=Channel1_In[22:0];
	temp1[42:23]=0;
	
	temp1=temp1*volume1;	
	buff_channel1[23]=Channel1_In[23];
	if(Channel1_In[23]==1'b1)
		begin
			if(temp1[42:36]==0) begin
				if(temp1[35:13]>0)
					buff_channel1[22:0]=~(temp1[35:13]-1);				
				else
					buff_channel1[22:0]=~(temp1[35:13]);									
			end else
					buff_channel1[22:0]=23'b00000000000000000000000;			
		end
	else
		begin
			if(temp1[42:36]==0)			
				buff_channel1[22:0]=temp1[35:13];
			else
				buff_channel1[22:0]=23'b11111111111111111111111;
		end	
		
end


reg [23:0] buff_channel2;
reg [42:0] temp2;
always @(negedge clk)
begin
	
		
	temp2=0;
	if(Channel2_In[23]==1'b1)
		temp2[22:0]=(~Channel2_In[22:0]+1);
	else
		temp2[22:0]=Channel2_In[22:0];
	temp2[42:23]=0;
	
	temp2=temp2*volume2;	
	buff_channel2[23]=Channel2_In[23];
	if(Channel2_In[23]==1'b1)
		begin
			if(temp2[42:36]==0) begin
				if(temp2[35:13]>0)
					buff_channel2[22:0]=~(temp2[35:13]-1);				
				else
					buff_channel2[22:0]=~(temp2[35:13]);									
			end else
					buff_channel2[22:0]=23'b00000000000000000000000;			
		end
	else
		begin
			if(temp2[42:36]==0)			
				buff_channel2[22:0]=temp2[35:13];
			else
				buff_channel2[22:0]=23'b11111111111111111111111;
		end	
		
		
end

reg [23:0] buff_channel3;
reg [42:0] temp3;
always @(negedge clk)
begin

	temp3=0;
	if(Channel3_In[23]==1'b1)
		temp3[22:0]=(~Channel3_In[22:0]+1);
	else
		temp3[22:0]=Channel3_In[22:0];
	temp3[42:23]=0;
	
	temp3=temp3*volume3;	
	buff_channel3[23]=Channel3_In[23];
	if(Channel3_In[23]==1'b1)
		begin
			if(temp3[42:36]==0) begin
				if(temp3[35:13]>0)
					buff_channel3[22:0]=~(temp3[35:13]-1);				
				else
					buff_channel3[22:0]=~(temp3[35:13]);									
			end else
					buff_channel3[22:0]=23'b00000000000000000000000;			
		end
	else
		begin
			if(temp3[42:36]==0)			
				buff_channel3[22:0]=temp3[35:13];
			else
				buff_channel3[22:0]=23'b11111111111111111111111;
		end	
					
end
reg [23:0] channel1_sample;
reg [42:0] temp_reg1;
always @(posedge clk)
begin
	channel1_sample=0;	
	case(pan[1:0])
		2'b10:
			channel1_sample=buff_channel1;			
		2'b11:
			channel1_sample=devide_2(buff_channel1);
	endcase
	
	case(pan[3:2])
		2'b10:
			channel1_sample=mix(channel1_sample,buff_channel2);			
		2'b11:
			channel1_sample=mix(channel1_sample,devide_2(buff_channel2));
	endcase	
	
	case(pan[5:4])
		2'b10:
			channel1_sample=mix(channel1_sample,buff_channel3);			
		2'b11:
			channel1_sample=mix(channel1_sample,devide_2(buff_channel3));
	endcase			
	

	

	temp_reg1=0;
	if(channel1_sample[23]==1'b1)
		temp_reg1[22:0]=(~channel1_sample[22:0]+1);
	else
		temp_reg1[22:0]=channel1_sample[22:0];
	temp_reg1[42:23]=0;
	
	temp_reg1=temp_reg1*volume_master;	
	Channel1_Out[23]=channel1_sample[23];
	if(channel1_sample[23]==1'b1)
		begin
			if(temp_reg1[42:36]==0) begin
				if(temp_reg1[35:13]>0)
					Channel1_Out[22:0]=~(temp_reg1[35:13]-1);				
				else
					Channel1_Out[22:0]=~(temp_reg1[35:13]);									
			end else
					Channel1_Out[22:0]=23'b00000000000000000000000;			
		end
	else
		begin
			if(temp_reg1[42:36]==0)			
				Channel1_Out[22:0]=temp_reg1[35:13];
			else
				Channel1_Out[22:0]=23'b11111111111111111111111;
		end	
	
	
	
	//Channel1_Out=channel1_sample;
end

reg [23:0] channel2_sample;
reg [42:0] temp_reg2;
always @(posedge clk)
begin
	channel2_sample=0;	
	case(pan[1:0])
		2'b01:
			channel2_sample=buff_channel1;			
		2'b11:
			channel2_sample=devide_2(buff_channel1);
	endcase
	
	case(pan[3:2])
		2'b01:
			channel2_sample=mix(channel2_sample,buff_channel2);			
		2'b11:
			channel2_sample=mix(channel2_sample,devide_2(buff_channel2));
	endcase	
	
	case(pan[5:4])
		2'b01:
			channel2_sample=mix(channel2_sample,buff_channel3);			
		2'b11:
			channel2_sample=mix(channel2_sample,devide_2(buff_channel3));
	endcase			
	
	



	temp_reg2=0;
	if(channel2_sample[23]==1'b1)
		temp_reg2[22:0]=(~channel2_sample[22:0]+1);
	else
		temp_reg2[22:0]=channel2_sample[22:0];
	temp_reg2[42:23]=0;
	
	temp_reg2=temp_reg2*volume_master;	
	Channel2_Out[23]=channel2_sample[23];
	if(channel2_sample[23]==1'b1)
		begin
			if(temp_reg2[42:36]==0) begin
				if(temp_reg2[35:13]>0)
					Channel2_Out[22:0]=~(temp_reg2[35:13]-1);				
				else
					Channel2_Out[22:0]=~(temp_reg2[35:13]);									
			end else
					Channel2_Out[22:0]=23'b00000000000000000000000;			
		end
	else
		begin
			if(temp_reg2[42:36]==0)			
				Channel2_Out[22:0]=temp_reg2[35:13];
			else
				Channel2_Out[22:0]=23'b11111111111111111111111;
		end	



		
end




endmodule